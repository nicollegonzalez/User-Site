{"ast":null,"code":"import _slicedToArray from \"/Users/Nicolle/reporting-interview-challenge-js-1/reporting-interview-challenge-js-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nicolle/reporting-interview-challenge-js-1/reporting-interview-challenge-js-1/src/Users.js\";\nimport React, { Fragment } from 'react';\nimport './Users.css';\nimport { fetchUsers } from './fetch-users';\nimport User from './User';\n\nconst Users = () => {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        users = _React$useState2[0],\n        setUsers = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        totalUsers = _React$useState4[0],\n        setTotalUsers = _React$useState4[1];\n\n  React.useEffect(() => {\n    // TODO: fetchUser should fetch all users from the paginated API and return the full list of 1000 users\n    fetchUsers().then(data => {\n      setUsers(data.items);\n      setTotalUsers(data._total);\n    });\n  }, []);\n\n  if (!users) {\n    return 'Loading...';\n  }\n\n  ;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Users\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Total Users \", totalUsers), React.createElement(\"div\", {\n    className: \"users-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, users.map(user => React.createElement(User, {\n    user: user,\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/Nicolle/reporting-interview-challenge-js-1/reporting-interview-challenge-js-1/src/Users.js"],"names":["React","Fragment","fetchUsers","User","Users","useState","users","setUsers","totalUsers","setTotalUsers","useEffect","then","data","items","_total","map","user","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,0BACUJ,KAAK,CAACK,QAAN,CAAe,IAAf,CADV;AAAA;AAAA,QACVC,KADU;AAAA,QACHC,QADG;;AAAA,2BAEoBP,KAAK,CAACK,QAAN,CAAe,IAAf,CAFpB;AAAA;AAAA,QAEVG,UAFU;AAAA,QAEEC,aAFF;;AAIlBT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB;AACAR,IAAAA,UAAU,GACPS,IADH,CACQC,IAAI,IAAI;AACZL,MAAAA,QAAQ,CAACK,IAAI,CAACC,KAAN,CAAR;AACAJ,MAAAA,aAAa,CAACG,IAAI,CAACE,MAAN,CAAb;AACD,KAJH;AAKD,GAPD,EAOG,EAPH;;AASA,MAAI,CAACR,KAAL,EAAY;AACV,WAAO,YAAP;AACD;;AAAA;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBE,UAAjB,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADH,CAHF,CADF;AASD,CA1BD;;AA4BA,eAAeb,KAAf","sourcesContent":["import React, { Fragment} from 'react';\nimport './Users.css';\nimport { fetchUsers } from './fetch-users';\nimport User from './User';\n\nconst Users = () => {\n  const [ users, setUsers ] = React.useState(null);\n  const [ totalUsers, setTotalUsers ] = React.useState(null);\n\n  React.useEffect(() => {\n    // TODO: fetchUser should fetch all users from the paginated API and return the full list of 1000 users\n    fetchUsers()\n      .then(data => {\n        setUsers(data.items);\n        setTotalUsers(data._total);\n      });\n  }, []);\n\n  if (!users) {\n    return 'Loading...';\n  };\n\n  return (\n    <Fragment>\n      <h2>Users</h2>\n      <h3>Total Users {totalUsers}</h3>\n      <div className=\"users-wrapper\">\n        {users.map((user) => <User user={user} key={user.id}/>)}\n      </div>\n    </Fragment>\n  )\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}